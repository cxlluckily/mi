<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation=
			   "http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd

	 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	 
	<context:component-scan base-package="com.shankephone">
		<context:exclude-filter type="annotation"  expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 开启shiro注解支持 -->
	<!--<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"-->
		  <!--depends-on="lifecycleBeanPostProcessor" />-->
	<!--<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">-->
		<!--<property name="securityManager" ref="securityManager" />-->
	<!--</bean>-->
	
	<bean id="contextAccessor" class="com.shankephone.mi.util.ContextAccessor"/>
	
	<bean id="propertyAccessor" class="com.shankephone.mi.util.PropertyAccessor">
		<property name="fileLocations">
			<array>
				<value>classpath:application.properties</value>
			</array>
		</property>
	</bean>
	
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:application.properties</value>
			</list>
		</property>
	</bean>

	<bean id="mysql_dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${dataSource.url}" />
		<property name="username" value="${dataSource.username}" />
		<property name="password" value="${dataSource.password}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${dataSource.initialSize}" />
		<property name="minIdle" value="${dataSource.minIdle}" />
		<property name="maxActive" value="${dataSource.maxActive}" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="30000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat" />
	</bean>
    
	<bean id="sqlMapClient" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="mysql_dataSource" />
	</bean>
	
	<bean id="mysql" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.shankephone.mi.*.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlMapClient" />
	</bean>
	
	<!-- 事务配置开始 -->
	 <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="mysql_dataSource"/>
	</bean>
	<!-- 声明式事务配置 -->
	<tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>


	<!--<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert*"/>
			<tx:method name="delete*"/>
			<tx:method name="update*"/>
			<tx:method name="save*"/>
			<tx:method name="add*"/>
			<tx:method name="*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:advisor pointcut="execution(* com.shankephone.*.service.*.*(..))" advice-ref="txAdvice"/>
	</aop:config> -->
	<!-- 事务配置结束 -->
	
	
	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 --> 
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> 
       	<!-- 指定所上传文件的总大小不能超过200000KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 --> 
        <property name="maxUploadSize" value="200000000"/> 
    </bean> 
    
    <!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 --> 
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"> 
        <property name="exceptionMappings"> 
            <props> 
                <!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error/error.jsp页面 --> 
                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error/error</prop> 
            </props> 
        </property> 
    </bean>
    	
	<import resource="applicationContext-servlet.xml"/>
	<import resource="applicationContext-shiro.xml"/>
	<import resource="applicationContext-wechat.xml"/>
	<import resource="applicationContext-quartz.xml"/>
</beans>